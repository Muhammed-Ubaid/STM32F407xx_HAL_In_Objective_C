/*
 * STM32F407xx_GPIO_Driver_Definitions_Public.h
 *
 *  Created on: Oct 19, 2023
 *      Author: Ubaid
 */

#include <stdbool.h>
#ifndef STM32F407XX_GPIO_DRIVER_PUBLIC_H_
#define STM32F407XX_GPIO_DRIVER_PUBLIC_H_


struct GPIO_RegDef_t;
struct GPIO_PinConfig_t;

/* enums for input config*/

/* GPIO Port definitions*/
typedef enum {
	PORT_GPIOA,
	PORT_GPIOB,
	PORT_GPIOC,
	PORT_GPIOD,
	PORT_GPIOE,
	PORT_GPIOF,
	PORT_GPIOG,
	PORT_GPIOH,
	PORT_GPIOI,
} e_GPIO_PORT_t;

/*
 * GPIO pin possible output types
 */
typedef enum {
	GPIO_OP_TYPE_PP, GPIO_OP_TYPE_OD,
} e_GPIO_OUTPUT_TYPE_t;

/*
 * @GPIO_PIN_SPEED
 * GPIO pin possible output speeds
 */
typedef enum {
	GPIO_SPEED_LOW, GPIO_SPEED_MEDIUM, GPIO_SPEED_FAST, GPOI_SPEED_HIGH,
} e_GPIO_OUTPUT_SPEED_t;

/*
 * GPIO pin pull up AND pull down configuration macros
 */
typedef enum {
	GPIO_NO_PUPD, GPIO_PIN_PU, GPIO_PIN_PD,
} e_GPIO_PUPD_CONFIG_t;

/*
 * @GPIO_PIN_NUMBERS
 * GPIO pin numbers
 */
typedef enum {
	GPIO_PIN_NO_0,
	GPIO_PIN_NO_1,
	GPIO_PIN_NO_2,
	GPIO_PIN_NO_3,
	GPIO_PIN_NO_4,
	GPIO_PIN_NO_5,
	GPIO_PIN_NO_6,
	GPIO_PIN_NO_7,
	GPIO_PIN_NO_8,
	GPIO_PIN_NO_9,
	GPIO_PIN_NO_10,
	GPIO_PIN_NO_11,
	GPIO_PIN_NO_12,
	GPIO_PIN_NO_13,
	GPIO_PIN_NO_14,
	GPIO_PIN_NO_15,
} e_GPIO_PIN_CONFIG_t;

/*
 * @GPIO_PIN_MODES
 * GPIO pin possible modes
 */
typedef enum {
	GPIO_MODE_IN,
	GPIO_MODE_OUT,
	GPIO_MODE_ALTFN,
	GPIO_MODE_ANALOG,
	GPIO_MODE_IT_FT,
	GPIO_MODE_IT_RT,
	GPIO_MODE_IT_RFT,
} e_GPIO_PIN_MODES_t;

/* Create USER handle */
typedef struct {
	struct GPIO_RegDef_t *Private_GPIO_Reg_Data;
	struct GPIO_PinConfig_t *Private_GPIO_User_Data;
	e_GPIO_PORT_t GPIO_PORT;
	e_GPIO_PIN_CONFIG_t GPIO_PIN_NUM;
	e_GPIO_PIN_MODES_t GPIO_PIN_MODE;
	e_GPIO_OUTPUT_TYPE_t GPIO_OUTPUT_TYPE;
	e_GPIO_PUPD_CONFIG_t GPIO_PUPD_TYPE;
	e_GPIO_OUTPUT_SPEED_t GPIO_SPEED_TYPE;
	uint8_t Alt_Func_Mode;
} GPIO_Config_UserHandle_t;

/******************************************************************************************
 *								APIs supported by this driver
 *		 For more information about the APIs check the function definitions
 ******************************************************************************************/

/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Config_UserHandle_t* UserHandle);
void GPIO_DeInit(GPIO_Config_UserHandle_t UserHandle);

/*
 * Data read and write
 */
bool GPIO_ReadFromInputPin(GPIO_Config_UserHandle_t UserHandle);
uint16_t GPIO_ReadFromInputPort(GPIO_Config_UserHandle_t UserHandle);
void GPIO_WriteToOutputPin(GPIO_Config_UserHandle_t UserHandle, uint8_t l_value);
void GPIO_WriteToOutputPort(GPIO_Config_UserHandle_t UserHandle, uint16_t l_value,  bool operation);
void GPIO_ToggleOutputPin(GPIO_Config_UserHandle_t* UserHandle);
//
//
///*
// * IRQ Configuration and ISR handling
// */
//void GPIO_IRQInterruptConfig(GPIO_Config_UserHandle_t UserHandle);
//void GPIO_IRQPriorityConfig(GPIO_Config_UserHandle_t UserHandle);
//void GPIO_IRQHandling(uint8_t PinNumber);

#endif
